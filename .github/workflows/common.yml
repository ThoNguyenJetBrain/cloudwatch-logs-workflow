name: Send Slack Notification

on:
  workflow_call:
    inputs:
      color:
        required: true
        type: string
      message:
        required: true
        type: string
      title:
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK:
        required: true

jobs:
  send-notification:
    runs-on: ubuntu-latest

    steps:
      - name: Decode Base64 message
        run: |
          DECODED_MESSAGE=$(echo "${{ inputs.message }}" | base64 -d)
          echo "DECODED_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$DECODED_MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Confirm Data before Send Slack
        run: |
          echo "Decoded Message:"
          echo "$DECODED_MESSAGE"

      #- name: Send message to Slack
      #  uses: rtCamp/action-slack-notify@v2
      #  env:
      #    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #    SLACK_COLOR: ${{ inputs.color }}
      #    SLACK_MESSAGE: |
      #      {
      #        "title": "${{ inputs.title }}",
      #        "logs": "$DECODED_MESSAGE"
      #      }

      - name: Send message to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ inputs.color }}
          SLACK_TITLE: ${{ inputs.title }}
          run: |
            SLACK_MESSAGE=$(jq -n \
            --arg title "$SLACK_TITLE" \
            --arg logs "$DECODED_MESSAGE" \
            '{title: $title, logs: $logs}')
          
            echo "Final Slack Message:"
            echo "$SLACK_MESSAGE"
          
          curl -X POST -H 'Content-type: application/json' --data "$SLACK_MESSAGE" $SLACK_WEBHOOK
