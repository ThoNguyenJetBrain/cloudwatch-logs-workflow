name: Toggle AWS CloudWatch Event Rule

on:
  workflow_dispatch:
    inputs:
      rule_name:
        description: 'Select the CloudWatch Event Rule to toggle'
        required: true
        type: choice
        options: []  # Sẽ được làm mới khi chạy workflow phụ
      rule_state:
        description: 'State to set for the rule (ENABLED or DISABLED)'
        required: true
        type: choice
        options:
          - ENABLED
          - DISABLED
        default: 'ENABLED'

env:
  AWS_REGION: ap-southeast-1  # Thay bằng region của bạn

permissions:
  contents: read
  id-token: write  # Cần cho OIDC authentication
  actions: read   # Cần để truy cập artifact

jobs:
  toggle-rule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rule: ${{ fromJson(needs.prepare.outputs.rules).rules }}
      fail-fast: true
      max-parallel: 1  # Chỉ chạy job cho rule được chọn

    needs: prepare

    if: matrix.rule == github.event.inputs.rule_name

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Download Rules Artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudwatch-rules
          path: .

      - name: Toggle CloudWatch Event Rule
        run: |
          RULE_NAME="${{ matrix.rule }}"
          RULE_STATE="${{ github.event.inputs.rule_state }}"
          echo "Setting rule $RULE_NAME to state $RULE_STATE"
          if [ "$RULE_STATE" = "ENABLED" ]; then
            aws events enable-rule --name "$RULE_NAME" --region ${{ env.AWS_REGION }}
          else
            aws events disable-rule --name "$RULE_NAME" --region ${{ env.AWS_REGION }}
          fi
          echo "Rule $RULE_NAME has been set to $RULE_STATE"

  prepare:
    runs-on: ubuntu-latest
    outputs:
      rules: ${{ steps.get-rules.outputs.rules }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Rules Artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudwatch-rules
          path: .

      - name: Read Rules JSON
        id: get-rules
        run: |
          RULES=$(cat rules.json)
          echo "rules=$RULES" >> $GITHUB_OUTPUT